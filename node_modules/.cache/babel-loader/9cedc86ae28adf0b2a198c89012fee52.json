{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nelsonmutinda/Documents/react-hooks-code-challenge-bank-of-flatiron/src/components/AddTransactionForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nfunction AddTransactionForm() {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  const [newData, setNewData] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: 0\n  });\n\n  function handleChange(event) {\n    let name = event.target.name;\n    let value = event.target.value;\n    setNewData({ ...newData,\n      [name]: value\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(data => {\n      const newTransactionData = [...transactions, data];\n      setTransactions(newTransactionData);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"ui form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          type: \"date\",\n          name: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTransactionForm, \"nRatPm7UTvfGrhNO7C/7Ic4efUc=\");\n\n_c = AddTransactionForm;\nexport default AddTransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"sources":["/home/nelsonmutinda/Documents/react-hooks-code-challenge-bank-of-flatiron/src/components/AddTransactionForm.js"],"names":["React","useState","AddTransactionForm","transactions","setTransactions","newData","setNewData","date","description","category","amount","handleChange","event","name","target","value","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","formData","then","response","json","data","newTransactionData"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,SAASC,kBAAT,GAA8B;AAAA;;AAC5B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC;AACrCM,IAAAA,IAAI,EAAE,EAD+B;AAErCC,IAAAA,WAAW,EAAE,EAFwB;AAGrCC,IAAAA,QAAQ,EAAE,EAH2B;AAIrCC,IAAAA,MAAM,EAAE;AAJ6B,GAAD,CAAtC;;AAOA,WAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAC1B,QAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAAxB;AACA,QAAIE,KAAK,GAAGH,KAAK,CAACE,MAAN,CAAaC,KAAzB;AACAT,IAAAA,UAAU,CAAE,EACV,GAAGD,OADO;AACE,OAACQ,IAAD,GAAQE;AADV,KAAF,CAAV;AAGD;;AAED,WAASC,YAAT,CAAsBJ,KAAtB,EAA4B;AAC1BA,IAAAA,KAAK,CAACK,cAAN;AACAC,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFiC;AAK1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeC,QAAf;AALoC,KAAvC,CAAL,CAOGC,IAPH,CAOSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPtB,EAQGF,IARH,CAQSG,IAAD,IAAU;AAChB,YAAMC,kBAAkB,GAAG,CAAC,GAAG1B,YAAJ,EAAkByB,IAAlB,CAA3B;AACAxB,MAAAA,eAAe,CAACyB,kBAAD,CAAf;AACC,KAXH;AAYD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEb,YAAhB;AAA8B,MAAA,SAAS,EAAC,SAAxC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAO,UAAA,QAAQ,EAAIL,YAAnB;AAAiC,UAAA,IAAI,EAAC,MAAtC;AAA6C,UAAA,IAAI,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,QAAQ,EAAIA,YAAnB;AAAiC,UAAA,IAAI,EAAC,MAAtC;AAA6C,UAAA,IAAI,EAAC,aAAlD;AAAgE,UAAA,WAAW,EAAC;AAA5E;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAO,UAAA,QAAQ,EAAIA,YAAnB;AAAiC,UAAA,IAAI,EAAC,MAAtC;AAA6C,UAAA,IAAI,EAAC,UAAlD;AAA6D,UAAA,WAAW,EAAC;AAAzE;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAO,UAAA,QAAQ,EAAIA,YAAnB;AAAiC,UAAA,IAAI,EAAC,QAAtC;AAA+C,UAAA,IAAI,EAAC,QAApD;AAA6D,UAAA,WAAW,EAAC,QAAzE;AAAkF,UAAA,IAAI,EAAC;AAAvF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAhDQT,kB;;KAAAA,kB;AAkDT,eAAeA,kBAAf","sourcesContent":["import React, {useState} from \"react\";\n\nfunction AddTransactionForm() {\n  const [transactions, setTransactions] = useState([]); \n  const [newData, setNewData] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: 0,\n  })\n\n  function handleChange(event){\n    let name = event.target.name\n    let value = event.target.value\n    setNewData ({  \n      ...newData, [name]: value\n    });\n  }\n\n  function handleSubmit(event){\n    event.preventDefault()\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData)\n    })\n      .then((response) => response.json())\n      .then((data) => {\n      const newTransactionData = [...transactions, data] \n      setTransactions(newTransactionData)\n      })\n  }\n\n  return (\n    <div className=\"ui segment\">\n      <form onSubmit={handleSubmit} className=\"ui form\">\n        <div className=\"inline fields\">\n          <input onChange = {handleChange} type=\"date\" name=\"date\" />\n          <input onChange = {handleChange} type=\"text\" name=\"description\" placeholder=\"Description\" />\n          <input onChange = {handleChange} type=\"text\" name=\"category\" placeholder=\"Category\" />\n          <input onChange = {handleChange} type=\"number\" name=\"amount\" placeholder=\"Amount\" step=\"0.01\" />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;"]},"metadata":{},"sourceType":"module"}